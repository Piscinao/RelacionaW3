@{
    ViewData["Title"] = "Areas";
}

<h2>Areas</h2>
<hr />

@model RelacionaW3.MVC.Models.AreaViewModel

@{
    var disabled = (Model.Id == null) ? "disabled" : string.Empty;
}
 <div class="card">
    <div class="card-header">
      Cadastrar Área
    </div>
    <div class="card-body">
   <form asp-controller="Area" asp-action="Create" method="post">
    <input type="hidden" asp-for="Id" value="@Model.Id" />

    <div class="form-group">
        <div class="col-4">
            <label>Descrição</label>
            <input asp-for="Descricao" type="text" value="@Model.Descricao" class="form-control" />
            <span asp-validation-for="Descricao" class="text-danger"></span>
        </div>
        <br />

       

      <div class="card-footer">
        <div class="col">
            <button type="button" class="btn btn-info" onclick="Novo()">Novo</button>
            <button type="submit" class="btn btn-success">Gravar</button>
            <button type="button" class="btn btn-warning" onclick="Listagem()">Listagem</button>
            <button type="button" class="btn btn-danger" onclick="Excluir(@Model.Id)" @disabled>Excluir</button>
        </div>
      </div>
</form>

<script>
    function Novo() {
        Request("Create");
    }
    function Listagem() {
        Request("");
    }
    function Excluir(Id) {
        Request("Excluir\\" + Id);
    }
    function Request(request) {
        window.location = window.origin + "\\Area\\" + request;
    }
</script>



<!-- <script src="~/js/views/home/index.js"></script> -->